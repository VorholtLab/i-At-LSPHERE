% Script for computing model accuracy as generated by NICEgame and compared
% to carbon source utilization data
%
%Alan R. Pacheco 05.02.22, 13.03.23

clearvars

modelDir = '../../../Models/NICEgame/Gapfilled/';
refSeqKeyFile = '../../../Models/Genomes/AtLSPHERE_RefSeq.mat';
mediaFile = '../../../Medium/minMedCSourceScreen.mat';
growthDataFile = '../../../Medium/CSourceScreen_Jul2022.xlsx';

accuracySaveFileName = '../../../../Models/NICEgame/Gapfilled/modelAccuracy';

%% Order the organisms by strain name
load(refSeqKeyFile)
if ~exist('organismIDs','var')
    organismIDs = StrainRefSeqKey.Strain;
end
organismIDs(find(ismember(organismIDs,'Fr1'))) = [];

strainNumbers = zeros(size(organismIDs));
for i = 1:length(organismIDs)
    s = split(organismIDs{i},'Leaf');
    strainNumbers(i) = str2double(s{2});
end
[~,order] = sort(strainNumbers,'ascend');
organismIDs = organismIDs(order);

%% Load the medium, experimental growth data, and phylogenetic information
disp('Loading files...')

% Load and format the medium
disp('    Loading medium file...')
load(mediaFile)

% Load and process experimental growth data
disp('    Loading experimental data file...')
[~, ~, raw] = xlsread(growthDataFile);
strainNames = raw(2:end,1);
nutrients = raw(1,2:end);
growthData = raw(2:end,2:end);
growthData = reshape([growthData{:}],size(growthData));
waterIndex = find(ismember(nutrients,'h2o'));
nutrients(waterIndex) = [];
nutrientNames(waterIndex) = [];
growthData(:,waterIndex) = [];
growthData(find(isnan(growthData))) = 0;
nutrients = strcat(nutrients,'[e]');

extraXylans = find(ismember(nutrients,{'xylan8[e]','xylan12[e]'}));
nutrients(extraXylans) = [];
nutrientNames(extraXylans) = [];
growthData(:,extraXylans) = [];
nutrientNames(find(ismember(nutrients,'xylan4[e]'))) = {'Xylan'};

%% Check if COBRA toolbox is loaded
load([modelDir organismIDs{1}]);
try optimizeCbModel(model); catch; disp('Initializing COBRA Toolbox...');initCobraToolbox;changeCobraSolver('ibm_cplex'); end

%% Calculate accuracy metrics on TFA-gapfilled models
[Acc_All,AccBal_All,TPR_All,FPR_All,MCC_All] = deal(zeros(length(organismIDs),1));
confusion = zeros(length(organismIDs),length(nutrients));
organismsNotPresent = [];
[predGrowthAll,trueGrowthAll] = deal(zeros(length(organismIDs),length(nutrients)));
for i = 1:length(organismIDs)
    
    try
        load([modelDir organismIDs{i}]);
    catch
        organismsNotPresent = [organismsNotPresent i];
        warning(['No file found for organism ' organismIDs{i} '. Skipping...'])
        continue
    end
    disp(['Calculating accuracy for ' organismIDs{i} '...'])
    
    % Get final model accuracy
    predGrowth = growModelInCSources(model,minMed,vitamins,nutrients,10);
    trueGrowth = growthData(find(ismember(strainNames,organismIDs{i})),:);
    
    Acc_All(i) = length(find(predGrowth == trueGrowth))/length(nutrients);
    TPR_All(i) = length(intersect(find(predGrowth == 1),find(trueGrowth == 1)))/length(find(trueGrowth == 1));
    FPR_All(i) = length(intersect(find(predGrowth == 1),find(trueGrowth == 0)))/length(find(trueGrowth == 0));

    tp = intersect(find(predGrowth == 1),find(trueGrowth == 1));
    tn = intersect(find(predGrowth == 0),find(trueGrowth == 0));
    fp = intersect(find(predGrowth == 1),find(trueGrowth == 0));
    fn = intersect(find(predGrowth == 0),find(trueGrowth == 1));

    AccBal_All(i) = (length(tp)/(length(tp)+length(fn))+length(tn)/(length(fp)+length(tn)))/2;
    if (sum(trueGrowth == 0) && isnan(AccBal_All(i))); AccBal_All(i) = 1; end
    MCC_All(i) = ((length(tp)*length(tn))-(length(fp)*length(fn)))/sqrt((length(tp)+length(fp))*(length(tp)+length(fn))*(length(tn)+length(fp))*(length(tn)+length(fn)));
    
    confusion(i,tp) = 1;
    confusion(i,tn) = -1;
    confusion(i,fp) = 0.5;
    confusion(i,fn) = -0.5;
    
    predGrowthAll(i,:) = predGrowth;
    trueGrowthAll(i,:) = trueGrowth;
end

organismIDs(organismsNotPresent) = [];
Acc_All(organismsNotPresent) = [];
AccBal_All(organismsNotPresent) = [];
TPR_All(organismsNotPresent) = [];
FPR_All(organismsNotPresent) = [];
MCC_All(organismsNotPresent) = [];
confusion(organismsNotPresent,:) = [];

%% Save accuracy information

accData.nutrients = nutrients;
accData.organismIDs = organismIDs;
accData.predGrowthAll = predGrowthAll;
accData.trueGrowthAll = trueGrowthAll;
accData.Acc_All = Acc_All;
accData.AccBal_All = AccBal_All;
accData.TPR_All = TPR_All;
accData.FPR_All = FPR_All;
accData.MCC_All = MCC_All;
accData.confusion = confusion;

save(accuracySaveFileName,'accData','-v7.3')